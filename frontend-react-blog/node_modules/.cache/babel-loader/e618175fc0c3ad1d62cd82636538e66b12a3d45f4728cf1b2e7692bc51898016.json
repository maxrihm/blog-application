{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morge\\\\Desktop\\\\asp.net-project\\\\frontend-react-blog\\\\src\\\\components\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n// src/components/LoginPage.js\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { TextField, Button, Grid, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: ''\n  });\n  const dispatch = useDispatch();\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCredentials(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleLogin = () => {\n    // Here you would generally handle authentication, e.g., call an API. \n    // But for this example, let's dispatch the login action directly:\n    dispatch({\n      type: 'LOGIN'\n    });\n    alert('Logged in!');\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    style: {\n      marginTop: '1rem'\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      lg: 4,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          padding: '2rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Username\",\n          variant: \"outlined\",\n          name: \"username\",\n          value: credentials.username,\n          onChange: handleInputChange,\n          style: {\n            marginBottom: '1rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Password\",\n          variant: \"outlined\",\n          type: \"password\",\n          name: \"password\",\n          value: credentials.password,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          style: {\n            marginTop: '1rem'\n          },\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"Ah8Lx3LVmupF6ulV+ay1lndQr3I=\", false, function () {\n  return [useDispatch];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useDispatch","TextField","Button","Grid","Paper","jsxDEV","_jsxDEV","LoginPage","_s","credentials","setCredentials","username","password","dispatch","handleInputChange","event","name","value","target","prev","handleLogin","type","alert","container","justifyContent","style","marginTop","children","item","xs","md","lg","padding","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","label","variant","onChange","marginBottom","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/morge/Desktop/asp.net-project/frontend-react-blog/src/components/LoginPage.js"],"sourcesContent":["// src/components/LoginPage.js\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { TextField, Button, Grid, Paper } from '@mui/material';\r\n\r\nconst LoginPage = () => {\r\n  const [credentials, setCredentials] = useState({ username: '', password: '' });\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setCredentials((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    // Here you would generally handle authentication, e.g., call an API. \r\n    // But for this example, let's dispatch the login action directly:\r\n    dispatch({ type: 'LOGIN' });\r\n    alert('Logged in!');\r\n  };\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\" style={{ marginTop: '1rem' }}>\r\n      <Grid item xs={12} md={6} lg={4}>\r\n        <Paper style={{ padding: '2rem' }}>\r\n          <h2>Login</h2>\r\n          <TextField \r\n            fullWidth \r\n            label=\"Username\" \r\n            variant=\"outlined\" \r\n            name=\"username\" \r\n            value={credentials.username}\r\n            onChange={handleInputChange}\r\n            style={{ marginBottom: '1rem' }}\r\n          />\r\n          <TextField \r\n            fullWidth \r\n            label=\"Password\" \r\n            variant=\"outlined\" \r\n            type=\"password\" \r\n            name=\"password\" \r\n            value={credentials.password}\r\n            onChange={handleInputChange}\r\n          />\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            style={{ marginTop: '1rem' }}\r\n            onClick={handleLogin}\r\n          >\r\n            Login\r\n          </Button>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}